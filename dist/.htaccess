# Active le moteur de réécriture
RewriteEngine On

# Redirection HTTPS (recommandé pour Hostinger)
# Décommentez ces lignes si vous avez un certificat SSL
# RewriteCond %{HTTPS} off
# RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Redirection www vers non-www (ou inverse selon votre préférence)
# RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
# RewriteRule ^(.*)$ https://%1/$1 [R=301,L]

# Si un fichier HTML existe, le charger sans l'extension dans l'URL
RewriteCond %{REQUEST_FILENAME}.html -f
RewriteRule ^([^/]+)/?$ $1.html [L]

# Si le fichier/dossier n'existe pas, rediriger vers 404.html
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /404.html [L]

# Spécifie la page d'erreur 404 personnalisée
ErrorDocument 404 /404.html

# Page d'accueil par défaut
DirectoryIndex index.html

# Compression Gzip/Brotli pour optimiser les performances
<IfModule mod_deflate.c>
    # Compresser les fichiers texte
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/javascript
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE application/ld+json
    AddOutputFilterByType DEFLATE application/x-font-ttf
    AddOutputFilterByType DEFLATE font/opentype
    AddOutputFilterByType DEFLATE image/svg+xml
    AddOutputFilterByType DEFLATE image/x-icon
    
    # Éviter la compression des images déjà compressées
    SetEnvIfNoCase Request_URI \
        \.(?:gif|jpe?g|png|webp|avif)$ no-gzip dont-vary
    SetEnvIfNoCase Request_URI \
        \.(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary
</IfModule>

# Support Brotli si disponible (plus efficace que Gzip)
<IfModule mod_brotli.c>
    AddOutputFilterByType BROTLI_COMPRESS text/plain
    AddOutputFilterByType BROTLI_COMPRESS text/html
    AddOutputFilterByType BROTLI_COMPRESS text/xml
    AddOutputFilterByType BROTLI_COMPRESS text/css
    AddOutputFilterByType BROTLI_COMPRESS text/javascript
    AddOutputFilterByType BROTLI_COMPRESS application/javascript
    AddOutputFilterByType BROTLI_COMPRESS application/json
    AddOutputFilterByType BROTLI_COMPRESS image/svg+xml
</IfModule>

# Cache des ressources statiques
<IfModule mod_expires.c>
    ExpiresActive On
    
    # Images (cache long car Vite ajoute des hash)
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/avif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/ico "access plus 1 year"
    ExpiresByType image/x-icon "access plus 1 year"
    
    # CSS et JS avec hash Vite - cache très long
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType text/javascript "access plus 1 year"
    
    # Fonts
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/x-font-ttf "access plus 1 year"
    ExpiresByType application/x-font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
    
    # HTML - cache court pour les mises à jour
    ExpiresByType text/html "access plus 1 hour"
    
    # Autres fichiers
    ExpiresByType application/pdf "access plus 1 month"
    ExpiresByType application/json "access plus 1 day"
</IfModule>

# Headers de sécurité et performance
<IfModule mod_headers.c>
    # Cache Control spécifique
    <FilesMatch "\.(css|js|png|jpg|jpeg|gif|webp|avif|svg|woff|woff2|ttf|ico)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>
    
    <FilesMatch "\.(html|htm)$">
        Header set Cache-Control "public, max-age=3600"
    </FilesMatch>
    
    # Sécurité renforcée
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"
    
    # Performance
    Header unset ETag
    Header always set Vary "Accept-Encoding"
    
    # Preload des ressources critiques (optionnel)
    <FilesMatch "index\.html$">
        Header add Link "</assets/hero-img.avif>; rel=preload; as=image"
        Header add Link "</style-*.css>; rel=preload; as=style"
    </FilesMatch>
</IfModule>

# Optimisation des fichiers
FileETag None

# Désactiver la signature du serveur (sécurité)
ServerTokens Prod

# Bloquer l'accès aux fichiers sensibles
<FilesMatch "(^#.*#|\.(bak|conf|dist|fla|inc|ini|log|psd|sh|sql|sw[op])|~)$">
    Order allow,deny
    Deny from all
    Satisfy All
</FilesMatch>

# Bloquer l'accès aux dossiers système
RedirectMatch 403 ^/\.git
RedirectMatch 403 ^/node_modules
RedirectMatch 403 ^/src

# Optimisation pour les sites statiques
Options -Indexes -MultiViews +FollowSymLinks